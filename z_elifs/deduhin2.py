def elif12(number, element):
    """
    Elif12. Элементы окружности пронумерованы следующим образом:
    1 - радиус r, 2 - диаметр d = 2 * r, 3 - длина l = 2 * pi * r, 4 - площадь круга s = pi * r**2 .
    Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данной окружности (в том же порядке). В качестве значения π использовать 3.14.
    """
    if number == 1:
        return('d=', 2 * element,  2 * 3.14 * element, 's=', 3.14 * (element ** 2), element)
    elif number == 2:
        return('r=', element / 2,  2 * 3.14 * (element / 2), 's=', 3.14 * ((element / 2) ** 2), element)
    elif number == 3:
        return(element / (2 * 3.14), 2 * (element / (2 * 3.14)), 3.14 * ((element / (2 * 3.14)) ** 2), element)
    elif number == 4:
        return((element / 3.14) ** 0.5, 2 * (element / 3.14) ** 0.5, 2 * 3.14 * (element / 3.14) ** 0.5, element)


def elif13(number, element):
    """
    Elif13. Элементы равнобедренного прямоугольного треугольника пронумерованы следующим образом:
    1 - катет a, 2 - гипотенуза c = a * 2**0.5, 3 - высота h, опущенная на гипотенузу (h = c / 2),
    4 - площадь s = c * h / 2. Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данного треугольника (в том же порядке).
    """
    if number == 1:
        return(element * (2 ** 0.5), (element * (2 ** 0.5)) / 2, element * (2 ** 0.5) * (element * (2 ** 0.5) / 2) / 2, element)
    elif number == 2:
        return(element / (2 ** 0.5), element / 2, (element * (element / 2) / 2), element)
    elif number == 3:
        return((2 * element) / (2 ** 0.5), 2 * element, element * element, element)
    elif number == 4:
        return(2 * (element ** 0.5) / (2 ** 0.5), 2 * (element ** 0.5), element ** 0.5, element)


def elif14(number, element):
    """
    Elif14. Элементы равностороннего треугольника пронумерованы следующим образом:
    1 - сторона a, 2 - радиус r1 вписанной окружности (r1 = a * 3**0.5 / 6),
    3 - радиус r2 описанной окружности (r2 = 2 * r1), 4 - площадь s = a**2 * 3**0.5 / 4.
    Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данного треугольника (в том же порядке).
    """
    if number == 1:
        return((element * (3 ** 0.5)) / 6, 2 * ((element * (3 ** 0.5)) / 6), ((element ** 2) * (3 ** 0.5)) / 4, element)
    elif number == 2:
        return((6 * element) / (3 ** 0.5), element * 2, ((((6 * element) / (3 ** 0.5)) ** 2) * (3 ** 0.5)) / 4, element)
    elif number == 3:
        return((6 * (element / 2)) / (3 ** 0.5), element / 2, ((((6 * (element / 2)) / (3 ** 0.5)) ** 2) * (3 ** 0.5)) / 4, element)
    elif number == 4:
        return(((4 * element) / (3 ** 0.5)) ** 0.5, ((((4 * element) / (3 ** 0.5)) ** 0.5) * (3 ** 0.5)) / 6, 2 * (((((4 * element) / (3 ** 0.5)) ** 0.5) * (3 ** 0.5)) / 6), element)


def elif15(n, m):
    """
    Elif15. Мастям игральных карт присвоены порядковые номера: 1 - пики, 2 - трефы, 3 - бубны, 4 - червы.
    Достоинству карт, старших десятки, присвоены номера: 11 - валет, 12 - дама, 13 - король, 14 - туз.
    Даны два целых числа: n - достоинство (6 ≤ N ≤ 14) и m - масть карты (1 ≤ M ≤ 4).
    Вывести название соответствующей карты вида «шестерка бубен», «дама червей», «туз треф» и т. п.
    """
    a = ('шестерка', 'семерка', 'восьмерка', 'девятка', 'десятка', 'валет', 'дама', 'король', 'туз')
    b = ('пик', 'треф', 'бубен', 'червей')
    if 6<=n<=14 and 1<=m<=4:
        return(a[n-6], b[m-1])
    else:
        return('неправильно введены данные 0')


def elif16(years_olds):
    """
    Elif16. Дано целое число в диапазоне 20–69, определяющее возраст (в годах).
    Вывести строку-описание указанного возраста, обеспечив правильное согласование числа со словом «год»,
    например: 20 - «двадцать лет», 32 - «тридцать два года», 41 - «сорок один год».
    """
    a = ('двадцать', 'тридцать', 'сорок', 'пятьдесят', 'шестьдесят')
    b = ('один', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять')
    c = ('лет', 'года', 'год')
    helper = years_olds // 10
    helper1 = years_olds % 10
    if  20<=years_olds<=69:
        if years_olds%10 in (5,6,7,8,9):
            return(a[helper-2], b[helper1-1], c[0])
        elif years_olds%10==0:
            return(a[helper - 2], c[0])
        elif years_olds%10 in (2,3,4):
            return(a[helper - 2], b[helper1 - 1], c[1])
        elif years_olds%10==1:
            return(a[helper - 2], b[helper1 - 1], c[2])
    else:
        return('неправильно введены данные')


def elif17(int_number):
    """
    Elif17. Дано целое число в диапазоне 10–40, определяющее количество учебных заданий по некоторой теме.
    Вывести строку-описание указанного количества заданий, обеспечив правильное согласование числа со словами
    «учебное задание», например: 18 - «восемнадцать учебных заданий», 23 - «двадцать три учебных задания»,
    31 - «тридцать одно учебное задание».
   """
    a = ('одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать',
         'восемнадцать', 'девятнадцать',)
    b = ('десять', 'двадцать', 'тридцать', 'сорок')
    c = ('одно', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять')
    d = ('учебное здание', 'учебных зданий', 'учебных здания')
    helper = int_number//10
    helper1 = int_number%10
    if 10<=int_number<=40:
        if int_number in range(11,20):
            return(a[helper1-1], d[1])
        elif int_number%10 in (5,6,7,8,9):
            return(b[helper-1], c[helper1-1], d[1])
        elif int_number%10==0:
            return(b[helper-1], d[1])
        elif int_number%10 in (2,3,4):
            return(b[helper-1], c[helper1-1], d[2])
        elif int_number%10==1:
            return(b[helper - 1], c[helper1 - 1], d[0])
    else:
        return('число не входит в заданную область')

def elif18(int_number):
    """
    Elif18. Дано целое число в диапазоне 100–999. Вывести строку-описание данного числа,
    например: 256 - «двести пятьдесят шесть», 814 - «восемьсот четырнадцать».
    """
    a = ('сто', 'двести', 'триста', 'четыреста', 'пятьсот', 'шестьсот', 'семьсоть', 'восемьсот', 'девятьсот')
    b = ('десять','двадцать', 'тридцать', 'сорок', 'пятьдесят', 'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто')
    c = ('один', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять')
    d = ('одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать',
         'восемнадцать', 'девятнадцать',)
    aux = int_number%100
    helper = int_number//100
    helper1 = aux//10
    helper2 = int_number%10
    if 100<=int_number<=999:
        if int_number%100 in range(11,20):
            return(a[helper-1], d[helper2-1])
        elif helper1==0 and helper2!=0:
            return(a[helper - 1], c[helper2-1])
        elif int_number%100==0:
            return(a[helper - 1])
        elif int_number%10==0 and helper1!=0:
            return(a[helper - 1], b[helper1 - 1])
        else:
            return(a[helper - 1], b[helper1 - 1], c[helper2-1])
    else:
        return('число не входит в заданную область 0')



def elif19(year):
    """
    Elif19. В восточном календаре принят 60-летний цикл, состоящий из 12-летних под-циклов,
    обозначаемых названиями цвета: зеленый, красный, желтый, белый и черный. В каждом подцикле годы носят
    названия животных: крысы, коровы, тигра, зайца, дракона, змеи, лошади, овцы, обезьяны, курицы, собаки и свиньи.
    По номеру года определить его название, если 1984 год - начало цикла: «год зеленой крысы».
    """
    a = ('зеленой', 'красной', 'желтой', 'белой', 'черной')
    b = ('зеленого', 'красного', 'желтого', 'белого', 'черного')
    c = ('крысы', 'коровы', 'тигра', 'зайца', 'дракона', 'змеи', 'лошади', 'овцы', 'обезьяны', 'курицы', 'собаки', 'свиньи')
    east=year-1984
    if east>=0:
        while east>60:
            east=east-60
    elif east<0:
        while east<-60:
            east=east+60
    east1=east//12
    east2=east%12
    print(east1, east2)
    if east2 in (2, 3, 4):
        return ('год', b[east1], c[east2])
    elif east2 in (0, 1, 5, 6, 7, 8, 9, 10, 11):
        return ('год', a[east1], c[east2])

for i in range(1986, 1986 + 200):
    print(elif19(i))

def elif20(day, month):
    """
    Elif20. Даны два целых числа: day (день) и month (месяц), определяющие правильную дату.
    Вывести знак Зодиака, соответствующий этой дате: «Водолей» (20.1–18.2), «Рыбы» (19.2–20.3), «Овен» (21.3–19.4),
    «Телец» (20.4–20.5), «Близнецы» (21.5–21.6), «Рак» (22.6–22.7), «Лев» (23.7–22.8), «Дева» (23.8–22.9),
    «Весы» (23.9–22.10), «Скорпион» (23.10–22.11), «Стрелец» (23.11–21.12), «Козерог» (22.12–19.1)
    """
    def helper (a,b):
        index=0
        if b in (1,3,5,7,8,10,12) and 1<=a<=31:
            index=a+(b*100)
            return index
        elif b==2 and 1<=a<=29:
            index = a + (b * 100)
            return index
        elif b in (4,6,9,11) and 1<=a<=30:
            index = a + (b * 100)
            return index
        else:
            return 0

    if 120 <= helper(day,month) <= 218:
        return('Водолей')
    elif 219 <= helper(day,month) <= 320:
        return('Рыбы')
    elif 321 <= helper(day, month) <= 419:
        return('Овен')
    elif 420 <= helper(day, month) <= 520:
        return('Телец')
    elif 521 <= helper(day, month) <= 621:
        return('Близнецы')
    elif 622 <= helper(day, month) <= 722:
        return('Рак')
    elif 723 <= helper(day, month) <= 822:
        return('Лев')
    elif 823 <= helper(day, month) <= 922:
        return('Дева')
    elif 923 <= helper(day, month) <= 1022:
        return('Весы')
    elif 1023 <= helper(day, month) <= 1122:
        return('Скорпион')
    elif 1123 <= helper(day, month) <= 1221:
        return('Стрелец')
    elif 1222 <= helper(day, month) <= 1231 or 101 <= helper(day, month) <= 119:
        return('Козерог')
    else:
        return('неправильная дата 0')
