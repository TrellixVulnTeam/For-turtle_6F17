def elif12(number, element):
    """
    Elif12. Элементы окружности пронумерованы следующим образом:
    1 - радиус r, 2 - диаметр d = 2 * r, 3 - длина l = 2 * pi * r, 4 - площадь круга s = pi * r**2 .
    Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данной окружности (в том же порядке). В качестве значения π использовать 3.14.
    """
    if number==1:
        return element, 2*element, 2*element*3.14, 3.14*element**2
    elif number==2:
        return element/2, element, element*3.14, 3.14*(element/2)**2
    elif number==3:
        return element/6.28, element/3.14, element, 3.14*(element/6.28)**2
    elif number==4:
        return (element/3.14)**0.5, ((element/3.14)**0.5) * 2, ((element/3.14)**0.5)*6.28, element
    else:
        return('0')


def elif13(number, element):
    """
    Elif13. Элементы равнобедренного прямоугольного треугольника пронумерованы следующим образом:
    1 - катет a, 2 - гипотенуза c = a * 2**0.5, 3 - высота h, опущенная на гипотенузу (h = c / 2),
    4 - площадь s = c * h / 2. Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данного треугольника (в том же порядке).
    """
    if number==1:
        return element, element*2**0.5, (element*2**0.5)/2,(element**2)/2
    elif number==2:
        return element/(2**0.5), element, element/2, (element**2)/4
    elif number==3:
        return element*2/(2**0.5), element*2,element, element**2
    elif number==4:
        return (element*2)**0.5, (element**0.5)*2, element**0.5, element
    else:
        return('0')


def elif14(number, element):
    """
    Elif14. Элементы равностороннего треугольника пронумерованы следующим образом:
    1 - сторона a, 2 - радиус r1 вписанной окружности (r1 = a * 3**0.5 / 6),
    3 - радиус r2 описанной окружности (r2 = 2 * r1), 4 - площадь s = a**2 * 3**0.5 / 4.
    Дан номер одного из этих элементов и его значение.
    Вывести значения остальных элементов данного треугольника (в том же порядке).
    """
    if number==1:
        return element, (element*3**0.5)/6, (element*3**0.5)/3, ((element**2)*(3**0.5))/4
    elif number==2:
        return (element*6)/3**0.5, (element), element*2, (element**2)*3*3**0.5
    elif number==3:
        return (element*3)/3**0.5, element/2, element, ((element**2)*27**0.5)/4
    elif number==4:
        return ((element*4)/3**0.5)**0.5, (element**0.5)*3**0.25/3, (element**0.5)*3**0.25*2/3, element
    else:
        return(0)


def elif15(n, m):
    """
    Elif15. Мастям игральных карт присвоены порядковые номера: 1 - пики, 2 - трефы, 3 - бубны, 4 - червы.
    Достоинству карт, старших десятки, присвоены номера: 11 - валет, 12 - дама, 13 - король, 14 - туз.
    Даны два целых числа: n - достоинство (6 ≤ N ≤ 14) и m - масть карты (1 ≤ M ≤ 4).
    Вывести название соответствующей карты вида «шестерка бубен», «дама червей», «туз треф» и т. п.
    """
    if (6 <= n <= 14):
        if (1 <= m <= 4):
            mast={1:'пики',2: 'треф',3: 'бубен',4: 'червей'}
            kart={6: 'шестерка',7: 'семерка',8: 'восьмерка', 9: 'девятка', 10: 'десятка',11: 'валет', 12: 'дама', 13: 'король', 14: 'туз'}
            return(kart[n],mast[m])
        else:
            return('0 введено m')
    else:
         return('0 введено n, возможно m')
    


def elif16(years_olds):
    """
    Elif16. Дано целое число в диапазоне 20–69, определяющее возраст (в годах).
    Вывести строку-описание указанного возраста, обеспечив правильное согласование числа со словом «год»,
    например: 20 - «двадцать лет», 32 - «тридцать два года», 41 - «сорок один год».
    """
    des={20: 'двадцать',30: 'тридцать',40: 'сорок',50: 'пятьдесят',60: 'шестьдесят'}
    ede={1: 'один год',2: 'два года',3: 'три года',4: 'четыре года',5: 'пять лет',6: 'шесть лет',7: 'семь лет',8: 'восемь лет',9: 'девять лет'}
    a=years_olds%10
    b=(years_olds//10)*10
    if a==0:
        return(des[years_olds],'лет')
    elif 20<=years_olds<=69:
        return(des[b],ede[a])
    else:
        return('0 введена дата')



def elif17(int_number):
    """
    Elif17. Дано целое число в диапазоне 10–40, определяющее количество учебных заданий по некоторой теме.
    Вывести строку-описание указанного количества заданий, обеспечив правильное согласование числа со словами
    «учебное задание», например: 18 - «восемнадцать учебных заданий», 23 - «двадцать три учебных задания»,
    31 - «тридцать одно учебное задание».
   """
    des1={20: 'двадцать',30: 'тридцать',40: 'сорок'}
    des={10: 'десять учебных заданий',11: 'одинадцать учебных заданий',12: 'двенадцать учебных заданий',13: 'тринадцать учебных заданий',14: 'четырнадцать учебных заданий',15: 'пятнадцать учебных заданий',16: 'шестнадцать учебных заданий',17: 'семнадцать учебных заданий',18: 'восемнадцать учебных заданий',19: 'девятьнадцать учебных заданий',20: 'двадцать учебных заданий',30: 'тридцать учебных заданий',40: 'сорок учебных заданий'}
    ede={1: 'одно учебное задание',2: 'два учебных задания',3: 'три учебных задания',4: 'четыре учебных задания',5: 'пять учебных заданий',6: 'шесть учебных заданий',7: 'семь учебных заданий',8: 'восемь учебных заданий',9: 'девять учебных заданий'}
    a=int_number%10
    b=(int_number//10)*10
    if 10<=int_number<=20 or int_number%10==0:
        return(des[int_number])
    elif 21<=int_number<=40:
        return(des1[b],ede[a])
    else:
        return('0 введено число')
        
        

def elif18(int_number):
    """
    Elif18. Дано целое число в диапазоне 100–999. Вывести строку-описание данного числа,
    например: 256 - «двести пятьдесят шесть», 814 - «восемьсот четырнадцать».
    """
    ede={1 : 'один',2 : 'два',3 : 'три',4 : 'четыре',5 : 'пять',6 : 'шесть',7 : 'семь',8 : 'восемь',9 : 'девять'}
    sat={11 : 'одиннадцать',12 : 'двенадцать',13 : 'тринадцать',14 : 'четырнадцать',15 : 'пятнадцать',16 : 'шестнадцать',17 : 'семнадцать',18 : 'восемнадцать',19 : 'девятнадцать'}
    des={10 : 'десять',20 : 'двадцать',30 : 'тридцать',40 : 'сорок',50 : 'пятьдесят',60 : 'шестьдесят',70 : 'семьдесят',80 : 'восемьдесят',90 : 'девяносто'}
    sot={100 : 'сто',200 : 'двести',300 : 'триста',400 : 'четыреста',500 : 'пятьсот',600 : 'шестьсот',700 : 'семьсот',800 : 'восемьсот',900 : 'девятьсот'}
    a=(int_number//100)*100#сотни
    b=int_number-(int_number//100)*100#дцать
    d=int_number%10#еденицы
    c=int_number%100-d# десятки
    if 100>int_number or 999<int_number:
        return('0 введено число')
    elif 10<b<=19:
        return(sot[a],sat[b])
    elif b==0:
        return(sot[int_number])
    elif int_number%10==0:
        return(sot[a],des[c])
    elif (int_number//10)%10==0:
        return(sot[a],ede[d])
    elif 100<=int_number<=999:
        return(sot[a],des[c],ede[d])
def elif19(year):
    """
    Elif19. В восточном календаре принят 60-летний цикл, состоящий из 12-летних под-циклов,
    обозначаемых названиями цвета: зеленый, красный, желтый, белый и черный. В каждом подцикле годы носят
    названия животных: крысы, коровы, тигра, зайца, дракона, змеи, лошади, овцы, обезьяны, курицы, собаки и свиньи.
    По номеру года определить его название, если 1984 год - начало цикла: «год зеленой крысы».
    """
    ani={1: 'крысы',2: 'коровы',3: 'тигра',4: 'зайца',5: 'дракона',6: 'змеи',7: 'лошади',8: 'овцы',9: 'обезьяны',10: 'курицы',11: 'собаки',12: 'свиньи'}
    col={1: 'зеленой',2: 'красной',3: 'желтой',4: 'белой',5: 'черной'}
    col1={1: 'зеленого',2: 'красного',3: 'желтого',4: 'белого',5: 'черного'}
    a=0#ключ для цвета
    b=0#ключ для животного
    if year%10==4 or year%10==5:
        a=1
    elif year%10==6 or year%10==7:
        a=2
    elif year%10==9 or year%10==8:
        a=3
    elif year%10==0 or year%10==1:
        a=4
    elif year%10==2 or year%10==3:
        a=5
    else:
        pass
    
    if year%12==4:
        b=1
        return('год',col[a],ani[b])
    elif year%12==5:
        b=2
        return('год',col[a],ani[b])
    elif year%12==6:
        b=3
        return('год',col1[a],ani[b])
    elif year%12==7:
        b=4
        return('год',col1[a],ani[b])
    elif year%12==8:
        b=5
        return('год',col1[a],ani[b])
    elif year%12==9:
        b=6
        return('год',col[a],ani[b])
    elif year%12==10:
        b=7
        return('год',col[a],ani[b])
    elif year%12==11:
        b=8
        return('год',col[a],ani[b])
    elif year%12==0:
        b=9
        return('год',col[a],ani[b])
    elif year%12==1:
        b=10
        return('год',col[a],ani[b])
    elif year%12==2:
        b=11
        return('год',col[a],ani[b])
    elif year%12==3:
        b=12
        return('год', col[a], ani[b])
    else:
        return('Ошибка ввода')
    
def elif20(day, month):
    """
    Elif20. Даны два целых числа: day (день) и month (месяц), определяющие правильную дату.
    Вывести знак Зодиака, соответствующий этой дате: «Водолей» (20.1–18.2), «Рыбы» (19.2–20.3), «Овен» (21.3–19.4),
    «Телец» (20.4–20.5), «Близнецы» (21.5–21.6), «Рак» (22.6–22.7), «Лев» (23.7–22.8), «Дева» (23.8–22.9),
    «Весы» (23.9–22.10), «Скорпион» (23.10–22.11), «Стрелец» (23.11–21.12), «Козерог» (22.12–19.1)
    """
    znak={1 : 'Водолей',2 : 'Рыбы',3 : 'Овен',4 : 'Телец',5 : 'Близнецы',6 : 'Рак',7 : 'Лев',8 : 'Дева',9 : 'Весы',10 : 'Скорпион',11 : 'Стрелец',12 : 'Козерог'}
    d = day
    if (month==1) and (0<=day<=31):
        d=day
    elif (month==2) and (0<=day<=29):
        d=day+31
    elif (month==3) and (0<=day<=31):
        d=day+31+29
    elif (month==4) and (0<=day<=30):
        d=day+31+31+29
    elif (month==5) and (0<=day<=31):
        d=day+31+31+29+30
    elif (month==6) and (0<=day<=30):
        d=day+31+31+29+30+31
    elif (month==7) and (0<=day<=31):
        d=day+31+31+31+29+30+30
    elif (month==8) and (0<=day<=31):
        d=day+31+31+31+31+29+30+30
    elif (month==9) and (0<=day<=30):
        d=day+31+31+31+31+29+30+30+31
    elif (month==10) and (0<=day<=31):
        d=day+31+31+31+31+29+30+30+31+30
    elif (month==11) and (0<=day<=30):
        d=day+31+31+31+31+29+30+30+31+30+31
    elif (month==12) and (0<=day<=31):
        d=day+31+31+31+31+29+30+30+31+30+31+30
    else:
        return('0 введена дата')
    if 20<=d<=49:
        return('Знак Зодиака, соответствующий этой дате:',znak[1])
    elif 50<=d<=80:
        return('Знак Зодиака, соответствующий этой дате:',znak[2])
    elif 81<=d<=110:
        return('Знак Зодиака, соответствующий этой дате:',znak[3])
    elif 111<=d<=141:
        return('Знак Зодиака, соответствующий этой дате:',znak[4])
    elif 142<=d<=173:
        return('Знак Зодиака, соответствующий этой дате:',znak[5])
    elif 174<=d<=204:
        return('Знак Зодиака, соответствующий этой дате:',znak[6])
    elif 205<=d<=235:
        return('Знак Зодиака, соответствующий этой дате:',znak[7])
    elif 236<=d<=266:
        return('Знак Зодиака, соответствующий этой дате:',znak[8])
    elif 267<=d<=296:
        return('Знак Зодиака, соответствующий этой дате:',znak[9])
    elif 297<=d<=327:
        return('Знак Зодиака, соответствующий этой дате:',znak[10])
    elif 328<=d<=356:
        return('Знак Зодиака, соответствующий этой дате:',znak[11])
    elif (357<=d<=366) or(0<=d<=19):
        return('Знак Зодиака, соответствующий этой дате:',znak[12])

    
#elif12(0, 3.14)
#elif13(1, 6)
#elif14(3, 1.732049)
#elif15(14, 4)
#elif16(69)
#for i in range(1984,2020):
#   elif19(i)
#elif19(1984)
#for i in range(1,13,1):
#    elif20(15,i)   